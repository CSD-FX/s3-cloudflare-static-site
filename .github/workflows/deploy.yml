name: Deploy to S3 and Invalidate CloudFront

on:
  push:
    branches: [ main, master ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Inject build metadata
        run: |
          SHA=${GITHUB_SHA::7}
          sed -i "s/__GIT_SHA__/$SHA/" app.js

      - name: Upload assets to S3 (cache-busted)
        run: |
          # Long cache for immutable assets
          aws s3 cp styles.css s3://$S3_BUCKET/styles.css \
            --cache-control "public, max-age=31536000, immutable" --content-type text/css
          aws s3 cp app.js s3://$S3_BUCKET/app.js \
            --cache-control "public, max-age=31536000, immutable" --content-type application/javascript
          # Index with no-cache to allow quick updates
          aws s3 cp index.html s3://$S3_BUCKET/index.html \
            --cache-control "no-cache, no-store, must-revalidate" --content-type text/html

      - name: Invalidate CloudFront cache
        if: env.CLOUDFRONT_DISTRIBUTION_ID != ''
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "$CLOUDFRONT_DISTRIBUTION_ID" \
            --paths "/index.html" "/styles.css" "/app.js"
